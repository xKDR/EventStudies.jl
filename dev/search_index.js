var documenterSearchIndex = {"docs":
[{"location":"eventstudies/#Possible-API","page":"-","title":"Possible API","text":"","category":"section"},{"location":"eventstudies/","page":"-","title":"-","text":"eventtime_return_ts, success_codes = eventstudy(\n    nifty_ticker_returns_tsframe,\n    market_model,\n    eventtimes = Dates.Date(2019, 5, 23),\n    eventwindow = -5:5,\n    strict = true,\n    verbose = true,\n)","category":"page"},{"location":"models/#Models","page":"Models","title":"Models","text":"","category":"section"},{"location":"models/#Types-of-models","page":"Models","title":"Types of models","text":"","category":"section"},{"location":"models/","page":"Models","title":"Models","text":"Modules = [EventStudies.Models]\nFilter = x -> typeof(x) === DataType","category":"page"},{"location":"models/#EventStudies.Models.AbstractModel","page":"Models","title":"EventStudies.Models.AbstractModel","text":"abstract type Models.AbstractModel\n\nAbstract type for models used in EventStudies.jl. Any model should implement the StatsBase.fit!(model, data::TSFrame) and Models.apply(model, data::TSFrame).\n\n\n\n\n\n","category":"type"},{"location":"models/#EventStudies.Models.ConstantMeanReturn","page":"Models","title":"EventStudies.Models.ConstantMeanReturn","text":"ConstantMeanReturn()\n\nEach column is decreased by its mean.\n\n\n\n\n\n","category":"type"},{"location":"models/#EventStudies.Models.ExcessReturn","page":"Models","title":"EventStudies.Models.ExcessReturn","text":"ExcessReturn(market_returns::TSFrame)\n\nThis models basic scalar excess return.  \n\n\n\n\n\n","category":"type"},{"location":"models/#EventStudies.Models.MarketModel","page":"Models","title":"EventStudies.Models.MarketModel","text":"struct MarketModel <: AbstractModel\nMarketModel(market_returns::TSFrame)\n\nA model which fits the firm's returns to the market returns, using some provided index or market indicator.\n\nFit using fit or fit!, and apply to data using apply\n\nFields\n\nmarket_returns: A TSFrame which holds the market indicator/index data.\ncoefs: The coefficients of the fit.  Set by fit!.\n\n\n\n\n\n","category":"type"},{"location":"models/#Model-API","page":"Models","title":"Model API","text":"","category":"section"},{"location":"models/","page":"Models","title":"Models","text":"To define a new model, you need to create a struct MyModel <: EventStudies.Models.AbstractModel, whose contents can be arbitrary.  ","category":"page"},{"location":"models/","page":"Models","title":"Models","text":"Then, you have to implement StatsBase.fit!(model::MyModel, data::TSFrame)::MyModel, which should mutate the model to store the coefficients (you can do this in an immutable struct by making one of the fields a mutable type like a Vector).","category":"page"},{"location":"models/","page":"Models","title":"Models","text":"Finally, you have to implement StatsBase.predict(model::MyModel, data::TSFrame)::TSFrame which runs the model and returns the result as a TSFrame.  Column names should not be changed and data should not be mutated.","category":"page"},{"location":"models/","page":"Models","title":"Models","text":"Optionally, you can also implement Models.check_window(model::MyModel, window)::Bool, which checks whether the given window exists in your model.","category":"page"},{"location":"models/","page":"Models","title":"Models","text":"EventStudies.StatsBase.fit!\nEventStudies.StatsBase.predict","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"EditURL = \"https://github.com/xKDR/EventStudies.jl/blob/main/examples/mwe.jl\"","category":"page"},{"location":"examples/mwe/#A-minimal-example-of-using-EventStudies.jl","page":"Minimal example","title":"A minimal example of using EventStudies.jl","text":"","category":"section"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"This is a basic example of how you can conduct an event study using EventStudies.jl. We create and use synthetic data, show how to use the EventStudies.jl API, and plot it!","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"First, we load the packages:","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"using TSFrames      # EventStudies operates exclusively on TSFrames\nusing EventStudies\nusing CairoMakie    # For plotting\nCairoMakie.activate!(px_per_unit = 2, pt_per_unit = 1, type = :svg) # hide","category":"page"},{"location":"examples/mwe/#Creating-a-dataset","page":"Minimal example","title":"Creating a dataset","text":"","category":"section"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"First, we define the TSFrame with the data we want to use. This is a TSFrame with 11 rows, and 2 columns, var1 and var2. They both follow the same general path, linearly increasing to 1, then staying at 1.","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"ts1 = TSFrame(\n    DataFrame(\n        :Index => 1:11,\n        :var1 => vcat(LinRange(0, 1, 5), ones(6)),\n        :var2 => vcat(LinRange(0, 1, 6), ones(5)),\n    )\n)","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"For convenience, I've directly referred to everything from EventStudies.jl as EventStudies.*. However, these are all exported, so you don't have to do that.","category":"page"},{"location":"examples/mwe/#Computing-the-event-study","page":"Minimal example","title":"Computing the event study","text":"","category":"section"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"Event studies are conceptually very simple - you take a time series and a list of events, and extract a window around each event.  Then, you perform inference on these measurements to see if the event had a statistically significant effect on the time series, and what that effect was.","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"In order to conduct an event study, we need a list of events.  This has to be passed as a Vector of Pair{Symbol, DateType}. The first element of the pair is the name of the column in ts1 that we want to use as the event. The second element is the time of the event.  This can be in any type DateType which TSFrames supports, which for now is restricted to Int, Dates.Date, and Dates.DateTime.","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"event_list = [:var1 => 5, :var2 => 6]","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"Our dataset is the form of absolute measurements, levels in EventStudies.jl parlance. However, event studies function best when given data in the form of returns, which are the difference between the log-transformed measurements, or diff(log(ts)).  So, we'll convert our data to returns using the EventStudies.levels_to_returns function. To do this, we'll use the EventStudies.to_eventtime_windowed function, which takes in a TSFrame of returns, a list of events, and a window size.","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"eventtime_returns_ts, statuses = EventStudies.physical_to_event_time(levels_to_returns(ts1), event_list, 2)","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"The eventtime_returns_ts is a TSFrame with the same columns as ts1, but with a new index.  This index takes the form of \"event time\", which is the time relative to the event. All columns share the same index.  statuses represents the status of each event as a EventStatus object.  In this case, all events were successful.","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"Now, we can compute the cumulative returns, and the confidence intervals using the EventStudies.remap_cumsum and EventStudies.inference functions. The remap_cumsum function takes in a TSFrame of returns, and returns a TSFrame of cumulative returns.  You can think of cumulative returns as a mapping from returns back to levels, except renormalized so that everything starts at 0.","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"eventtime_cum_ts = EventStudies.remap_cumsum(eventtime_returns_ts)","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"Finally, we conduct inference on the cumulative returns. We'll use the EventStudies.BootstrapInference method, which takes in an inference method (see EventStudies.InferenceMethod) and the return timeseries. In this case, we use the bootstrap method of inference, which calls to Bootstrap.jl.","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"confints = EventStudies.inference(EventStudies.BootstrapInference(), eventtime_cum_ts)","category":"page"},{"location":"examples/mwe/#Plotting","page":"Minimal example","title":"Plotting","text":"","category":"section"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"Now, we can plot the results.  We'll use Makie.jl for this.","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"f, a, p = series(eventtime_cum_ts.Index, Matrix(eventtime_cum_ts)'; labels = [\"Event 1\", \"Event 2\"], axis = (xlabel = \"Event time\", ylabel = \"Cumulative return (%)\"))\nband!(eventtime_cum_ts.Index, confints[2], confints[3]; color = Makie.wong_colors(0.5)[3], label = \"95% Confidence interval\")\nlines!(eventtime_cum_ts.Index, confints[1]; label = \"Mean\")\naxislegend(a; position = :rb)\nf","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"And that's our event study!","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"This page was generated using Literate.jl.","category":"page"},{"location":"#EventStudies","page":"Home","title":"EventStudies","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: Dev) (Image: Build Status) (Image: Build Status) (Image: codecov)","category":"page"},{"location":"","page":"Home","title":"Home","text":"This package is made to conduct event studies in Julia.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The package is currently unregistered, so you can install directly by URL.  This will change in the future!","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Pkg\nPkg.add(url = \"https://github.com/xKDR/EventStudies.jl\")","category":"page"},{"location":"#Usage","page":"Home","title":"Usage","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The main entry point is the eventstudy function, which takes in a TSFrame (from TSFrames.jl) and a vector of event times, and returns a TSFrame of the timeseries in \"event time\".","category":"page"},{"location":"","page":"Home","title":"Home","text":"Here's a quick example of running ","category":"page"},{"location":"","page":"Home","title":"Home","text":"EventStudies.assetpath(...)\nspr = zoo_to_tsframe(EventStudies.asset(\"StockPriceReturns\"))\neventtime_returns_tsframe, event_success_codes = eventstudy(levels_to_returns(market_data), colnames .=> event_times, #= window width =# 4)","category":"page"},{"location":"#Models","page":"Home","title":"Models","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"You can provide a model in the last parameter of eventstudy, which is automatically parallelized based on how many threads you started Julia with.","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"EditURL = \"https://github.com/xKDR/EventStudies.jl/blob/main/examples/nifty.jl\"","category":"page"},{"location":"examples/nifty/#The-effect-of-Fed-rate-hikes-on-Indian-indicators","page":"Rate hikes and market indicators","title":"The effect of Fed rate hikes on Indian indicators","text":"","category":"section"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"# Load the packages:\nusing TSFrames\nusing MarketData\nusing Dates\nusing DataFrames\nusing EventStudies\nusing CairoMakie","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"First, get data about stock prices from MarketData.jl:","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"NIFTY index (India)","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"nifty = TSFrame(MarketData.yahoo(\"^NSEI\"))\nselect!(nifty.coredata, :Index, :AdjClose => :NIFTY)","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"USD/INR exchange rate","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"usd_inr = TSFrame(MarketData.yahoo(\"USDINR=X\"))\nselect!(usd_inr.coredata, :Index, :AdjClose => :USDINR)","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"US Fed funds rate","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"fed_rate = TSFrame(MarketData.fred(\"FEDFUNDS\"))\nfed_rate_2007 = TSFrame(fed_rate.coredata[searchsortedfirst(index(fed_rate), Date(2007, 1, 1)):end, :])\nfed_rate_diffs = diff(fed_rate_2007)\ndropmissing!(fed_rate_diffs.coredata)\nfed_rate_dates = filter(:VALUE => >(0), fed_rate_diffs.coredata)\n\n############################################################","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"                     Nifty                           #","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"############################################################\n\nphystime_returns_ts, event_status = EventStudies.eventstudy(levels_to_returns(nifty), (:NIFTY,) .=> fed_rate_dates.Index, -6:7, #=MarketModel(levels_to_returns(fed_rate))=#)\nt0, lower, upper = inference(BootstrapInference(), phystime_returns_ts)\nN = 200\ntimes = (phystime_returns_ts.Index .|> Dates.value) .+ 365\ny_vals, y_colors = EventStudies.inference_surface(BootstrapInference(), phystime_returns_ts; density = N)","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"plot","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"f, a, p = lines(times, t0; label = \"Mean over all events\")\nsp = surface!(a, permutedims(reduce(hcat, fill(times, N))), y_vals, y_colors; shading = false, colormap = :diverging_bwr_55_98_c37_n256)\ntranslate!(p, 0,0,-99)\ntranslate!(sp, 0,0,-100)\nf\np.color = Makie.wong_colors()[3]\nf\n\n\ncb = Colorbar(f[1, 2], sp; label = \"Confidence level\")\ncb.ticks = WilkinsonTicks(8; k_min = 5, k_max = 10)\nleg = axislegend(a; position = :rt)\n\na.title = \"Nifty performance after a Fed rate hike\"\na.subtitle = rich(rich(\"t=0\", font = to_font(\"Fira Mono\")), \" indicates the time of rate hike\")\na.titlealign = :left\na.xlabel = \"Event time (days)\"\na.ylabel = \"NIFTY returns\"\na.xticks = WilkinsonTicks(8; k_min = 5, k_max = 10)\n\nf","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"save(\"nifty.pdf\", f; ptperunit = 1)","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"############################################################","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"                     USDINR                          #","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"############################################################\n\n\nphystime_returns_ts, event_status = EventStudies.eventstudy(levels_to_returns(usd_inr), (:USDINR,) .=> fed_rate_dates.Index, -6:7)\nt0, lower, upper = inference(BootstrapInference(), phystime_returns_ts)\n\nphystime_returns_ts = remap_cumsum(phystime_returns_ts)\n\nN = 100\nxs = (phystime_returns_ts.Index .|> Dates.value) .+ 365\ndeviations = LinRange(0.5, 0.975, N÷2)\n\nx_vals = permutedims(hcat(fill(xs, N)...))\ny_vals = zeros(N, length(xs))\ny_colors = zeros(N, length(xs))\n\nfor (y_ind, deviation) in enumerate(deviations)\n    t0, lower, upper = inference(BootstrapInference(), phystime_returns_ts, deviation)\n    y_vals[50 - y_ind + 1, :] .= lower\n    y_vals[50 + y_ind , :] .= upper\n    y_colors[50 - y_ind + 1, :] .= 1 - deviation\n    y_colors[50 + y_ind , :] .= deviation\n\nend","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"plot","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"f, a, p = lines((phystime_returns_ts.Index .|> Dates.value) .+ 365, t0; label = \"Mean over all events\")\nsp = surface!(a, x_vals, y_vals, y_colors; shading = false, colormap = :diverging_bwr_55_98_c37_n256)\ntranslate!(p, 0,0,1)\nf\np.color = Makie.wong_colors()[3]\nf\n\ncb = Colorbar(f[1, 2], sp; label = \"Confidence level\")\ncb.ticks = WilkinsonTicks(8; k_min = 5, k_max = 10)\nleg = axislegend(a; position = :rt)\n\na.title = \"USD-INR performance after a Fed rate hike\"\na.subtitle = rich(rich(\"t=0\", font = to_font(\"Fira Mono\")), \" indicates the time of rate hike\")\na.titlealign = :left\na.xlabel = \"Event time (days)\"\na.ylabel = \"USD-INR returns\"\na.xticks = WilkinsonTicks(8; k_min = 5, k_max = 10)\nf","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"save(\"usdinr2.pdf\", f; ptper_unit = 1)","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"This page was generated using Literate.jl.","category":"page"}]
}
