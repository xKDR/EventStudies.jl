var documenterSearchIndex = {"docs":
[{"location":"examples/sex_ratio_at_birth/","page":"Sex ratio at birth","title":"Sex ratio at birth","text":"EditURL = \"https://github.com/xKDR/EventStudies.jl/blob/main/examples/sex_ratio_at_birth.jl\"","category":"page"},{"location":"examples/sex_ratio_at_birth/#The-effect-of-legislation-on-sex-ratio-at-birth","page":"Sex ratio at birth","title":"The effect of legislation on sex ratio at birth","text":"","category":"section"},{"location":"examples/sex_ratio_at_birth/","page":"Sex ratio at birth","title":"Sex ratio at birth","text":"This is an example of using EventStudies on long-form data from social sciences.  Specifically, we're going to be using data which","category":"page"},{"location":"examples/sex_ratio_at_birth/","page":"Sex ratio at birth","title":"Sex ratio at birth","text":"# Load the packages:\nusing TSFrames         # time series package - EventStudies only accepts this, since it has a defined index type\nusing EventStudies     # event study package\nusing CairoMakie       # plotting","category":"page"},{"location":"examples/sex_ratio_at_birth/","page":"Sex ratio at birth","title":"Sex ratio at birth","text":"Load the data.","category":"page"},{"location":"examples/sex_ratio_at_birth/","page":"Sex ratio at birth","title":"Sex ratio at birth","text":"data = EventStudies.load_data(\"bigdata.csv\")\nshow(IOContext(stdout, :compact => true), data) # hide","category":"page"},{"location":"examples/sex_ratio_at_birth/","page":"Sex ratio at birth","title":"Sex ratio at birth","text":"This data is in \"long\" format, so we need to convert it to \"wide\" format.","category":"page"},{"location":"examples/sex_ratio_at_birth/","page":"Sex ratio at birth","title":"Sex ratio at birth","text":"We do this by grouping by country,","category":"page"},{"location":"examples/sex_ratio_at_birth/","page":"Sex ratio at birth","title":"Sex ratio at birth","text":"country_data = groupby(data, :country)","category":"page"},{"location":"examples/sex_ratio_at_birth/","page":"Sex ratio at birth","title":"Sex ratio at birth","text":"filtering to only include countries with events defined,","category":"page"},{"location":"examples/sex_ratio_at_birth/","page":"Sex ratio at birth","title":"Sex ratio at birth","text":"countries_with_events = filter(sdf -> !(all(ismissing.(sdf.intyear_es))), country_data)","category":"page"},{"location":"examples/sex_ratio_at_birth/","page":"Sex ratio at birth","title":"Sex ratio at birth","text":"and finally, creating a TSFrame with the sex_rat variable for each country.","category":"page"},{"location":"examples/sex_ratio_at_birth/","page":"Sex ratio at birth","title":"Sex ratio at birth","text":"relevant_country_ts = TSFrames.join((TSFrame(DataFrame([:Index => sdf.year_es, Symbol(sdf.country[1]) => sdf.sex_rat])) for sdf in countries_with_events)...; jointype = :inner)","category":"page"},{"location":"examples/sex_ratio_at_birth/","page":"Sex ratio at birth","title":"Sex ratio at birth","text":"Create a mapping from country to event time, for each event.","category":"page"},{"location":"examples/sex_ratio_at_birth/","page":"Sex ratio at birth","title":"Sex ratio at birth","text":"Note that this can have multiple events per country.","category":"page"},{"location":"examples/sex_ratio_at_birth/","page":"Sex ratio at birth","title":"Sex ratio at birth","text":"event_times = [Symbol(sdf.country[1]) => sdf.intyear_es[findfirst(!ismissing, sdf.intyear_es)] for sdf in countries_with_events]","category":"page"},{"location":"examples/sex_ratio_at_birth/","page":"Sex ratio at birth","title":"Sex ratio at birth","text":"Convert to event time using EventStudies.jl (perform the event study).","category":"page"},{"location":"examples/sex_ratio_at_birth/","page":"Sex ratio at birth","title":"Sex ratio at birth","text":"eventtime_ts, retcodes = EventStudies.eventstudy(levels_to_returns(relevant_country_ts), event_times, 4)","category":"page"},{"location":"examples/sex_ratio_at_birth/","page":"Sex ratio at birth","title":"Sex ratio at birth","text":"Perform bootstrap inference with a 95% confidence interval","category":"page"},{"location":"examples/sex_ratio_at_birth/","page":"Sex ratio at birth","title":"Sex ratio at birth","text":"t0, lower, upper = inference(BootstrapInference(), eventtime_ts, 0.95)","category":"page"},{"location":"examples/sex_ratio_at_birth/","page":"Sex ratio at birth","title":"Sex ratio at birth","text":"we're technically done with the event study here!","category":"page"},{"location":"examples/sex_ratio_at_birth/","page":"Sex ratio at birth","title":"Sex ratio at birth","text":"now, it's time to plot plot each variable in the event study","category":"page"},{"location":"examples/sex_ratio_at_birth/","page":"Sex ratio at birth","title":"Sex ratio at birth","text":"fig, ax, plt = series(\n    index(eventtime_ts), Matrix(remap_cumsum(eventtime_ts))';\n    labels = names(eventtime_ts),\n    color = Makie.resample_cmap(:rainbow_bgyrm_35_85_c71_n256, 15),\n    linewidth = 3,\n    axis = (\n        xlabel = \"Years relative to event\",\n        xticks = WilkinsonTicks(8, k_min = 8, k_max = 8),\n        ylabel = \"Cumulative change\\nin sex ratio (%)\",\n        title = \"Variable: sex ratio at birth\",\n        subtitle = \"Event: some legislation\",\n        titlealign = :left,\n    ),\n    figure = (resolution = (1000, 1000),)\n)\nleg = Legend(fig[2, 1], ax; nbanks = 3, tellwidth = false, tellheight = true)\nfig","category":"page"},{"location":"examples/sex_ratio_at_birth/","page":"Sex ratio at birth","title":"Sex ratio at birth","text":"plot inference","category":"page"},{"location":"examples/sex_ratio_at_birth/","page":"Sex ratio at birth","title":"Sex ratio at birth","text":"fig, ax, mean_plt = lines(\n    index(eventtime_ts), t0;\n    label = \"Mean\",\n    linewidth = 3,\n    axis = (\n        xlabel = \"Years relative to event\",\n        xticks = WilkinsonTicks(8, k_min = 8, k_max = 8),\n        ylabel = \"Cumulative change\\nin sex ratio (%)\",\n        title = \"Variable: sex ratio at birth\",\n        subtitle = \"Event: some legislation\",\n        titlealign = :left,\n    ),\n)\n\nband_plt = band!(ax,\n    index(eventtime_ts), lower, upper;\n    label = \"95% CI\",\n    linewidth = 3,\n    color = Makie.wong_colors(0.5)[2],\n)\n\nleg = axislegend(ax, position = :lt)\n\nfig","category":"page"},{"location":"examples/sex_ratio_at_birth/","page":"Sex ratio at birth","title":"Sex ratio at birth","text":"plot inference using errorbars","category":"page"},{"location":"examples/sex_ratio_at_birth/","page":"Sex ratio at birth","title":"Sex ratio at birth","text":"fig, ax, plt = rangebars(\n    index(eventtime_ts),\n    lower, upper;\n    whiskerwidth = 16,\n    label = \"95% CI\",\n    axis = (\n        xlabel = \"Years relative to event\",\n        xticks = WilkinsonTicks(8, k_min = 8, k_max = 8),\n        ylabel = \"Cumulative change\\nin sex ratio (%)\",\n        title = \"Variable: sex ratio at birth\",\n        subtitle = \"Event: some legislation\",\n        titlealign = :left,\n    ),\n)\n\nscatter!(ax, index(eventtime_ts), t0; label = \"Mean value\")","category":"page"},{"location":"examples/sex_ratio_at_birth/","page":"Sex ratio at birth","title":"Sex ratio at birth","text":"small hack for a feature which we should add into Makie","category":"page"},{"location":"examples/sex_ratio_at_birth/","page":"Sex ratio at birth","title":"Sex ratio at birth","text":"function Makie.legendelements(plot::Rangebars, legend)\n    line_points = lift(plot.whiskerwidth) do ww\n        if ww â‰¤ 3\n            Point2f[(0.5, 1), (0.5, 0)]\n        else\n            Point2f[(0.25, 1), (0.75, 1), (NaN, NaN), (0.5, 1), (0.5, 0), (NaN, NaN), (0.25, 0), (0.75, 0)]\n        end\n    end\n    return Makie.LegendElement[\n        LineElement(\n            points = line_points,\n            color = Makie.scalar_lift(plot.color, legend.linecolor),\n            linewidth = Makie.scalar_lift(plot.linewidth, legend.linewidth)\n        ),\n    ]\nend\n\naxislegend(ax, position = :lt)\n\nfig","category":"page"},{"location":"examples/sex_ratio_at_birth/","page":"Sex ratio at birth","title":"Sex ratio at birth","text":"replicate eventstudies.R results","category":"page"},{"location":"examples/sex_ratio_at_birth/","page":"Sex ratio at birth","title":"Sex ratio at birth","text":"convert to event time","category":"page"},{"location":"examples/sex_ratio_at_birth/","page":"Sex ratio at birth","title":"Sex ratio at birth","text":"eventtime_ts, retcodes = EventStudies.eventstudy(levels_to_returns(relevant_country_ts), event_times, -2:3)","category":"page"},{"location":"examples/sex_ratio_at_birth/","page":"Sex ratio at birth","title":"Sex ratio at birth","text":"perform inference with a 95% confidence interval","category":"page"},{"location":"examples/sex_ratio_at_birth/","page":"Sex ratio at birth","title":"Sex ratio at birth","text":"t0, lower, upper = inference(BootstrapInference(), eventtime_ts, 0.95)","category":"page"},{"location":"examples/sex_ratio_at_birth/","page":"Sex ratio at birth","title":"Sex ratio at birth","text":"we're technically done with the event study here!","category":"page"},{"location":"examples/sex_ratio_at_birth/","page":"Sex ratio at birth","title":"Sex ratio at birth","text":"plot inference","category":"page"},{"location":"examples/sex_ratio_at_birth/","page":"Sex ratio at birth","title":"Sex ratio at birth","text":"fig, ax, mean_plt = lines(\n    index(eventtime_ts), t0;\n    label = \"Mean\",\n    linewidth = 3,\n    axis = (\n        xlabel = \"Years relative to event\",\n        xticks = WilkinsonTicks(8, k_min = 8, k_max = 8),\n        ylabel = \"Cumulative change\\nin sex ratio (%)\",\n        title = \"Variable: sex ratio at birth\",\n        subtitle = \"Event: some legislation\",\n        titlealign = :left,\n    ),\n)\n\nband_plt = band!(ax,\n    index(eventtime_ts), lower, upper;\n    label = \"95% CI\",\n    linewidth = 3,\n    color = Makie.wong_colors(0.5)[2],\n)\n\nleg = axislegend(ax, position = :lt)\n\nylims!(ax, -0.75, 0.75) # match R\nylims!(ax, -0.5, 0.5) # match R\nfig","category":"page"},{"location":"examples/sex_ratio_at_birth/","page":"Sex ratio at birth","title":"Sex ratio at birth","text":"","category":"page"},{"location":"examples/sex_ratio_at_birth/","page":"Sex ratio at birth","title":"Sex ratio at birth","text":"This page was generated using Literate.jl.","category":"page"},{"location":"examples/replications/","page":"Replicating eventstudies.R","title":"Replicating eventstudies.R","text":"EditURL = \"https://github.com/xKDR/EventStudies.jl/blob/main/examples/replications.jl\"","category":"page"},{"location":"examples/replications/","page":"Replicating eventstudies.R","title":"Replicating eventstudies.R","text":"using EventStudies, TSFrames, DataFrames, Dates, MarketData\nusing CairoMakie","category":"page"},{"location":"examples/replications/#Stock-splits","page":"Replicating eventstudies.R","title":"Stock splits","text":"","category":"section"},{"location":"examples/replications/","page":"Replicating eventstudies.R","title":"Replicating eventstudies.R","text":"First, we'll load the stock split data from eventstudies.R.","category":"page"},{"location":"examples/replications/","page":"Replicating eventstudies.R","title":"Replicating eventstudies.R","text":"stock_returns = EventStudies.load_data(\"StockPriceReturns.rda\")\nsplit_dates_df = EventStudies.load_data(\"SplitDates.rda\")\nother_returns = EventStudies.load_data(\"OtherReturns.rda\")","category":"page"},{"location":"examples/replications/#No-model","page":"Replicating eventstudies.R","title":"No model","text":"","category":"section"},{"location":"examples/replications/","page":"Replicating eventstudies.R","title":"Replicating eventstudies.R","text":"Let's try a regular event study, with no model:","category":"page"},{"location":"examples/replications/","page":"Replicating eventstudies.R","title":"Replicating eventstudies.R","text":"eventtime_ts, event_return_codes = eventstudy(\n    stock_returns, # returns TSFrame\n    Symbol.(split_dates_df.name) .=> split_dates_df.when, # [:colname => event_time, ...]\n    -6:7 # window - asymmetric to completely mimic R\n    ) # note that we haven't provided a model, so it defaults to `nothing` (no-op).","category":"page"},{"location":"examples/replications/","page":"Replicating eventstudies.R","title":"Replicating eventstudies.R","text":"Now, let's perform bootstrap inference:","category":"page"},{"location":"examples/replications/","page":"Replicating eventstudies.R","title":"Replicating eventstudies.R","text":"t0, lower, upper = EventStudies.inference(BootstrapInference(), eventtime_ts |> EventStudies.remap_cumsum)","category":"page"},{"location":"examples/replications/","page":"Replicating eventstudies.R","title":"Replicating eventstudies.R","text":"and plot the results!","category":"page"},{"location":"examples/replications/","page":"Replicating eventstudies.R","title":"Replicating eventstudies.R","text":"scatterlines(-6:7, t0; label = \"Mean\")\nlines!(-6:7, upper; color = Makie.wong_colors(0.5)[1], linestyle = :dash, label = \"95% CI\")\nlines!(-6:7, lower; color = Makie.wong_colors(0.5)[1], linestyle = :dash)\n# spruce up the figure\naxislegend(Makie.current_axis(); position = :lt)\nMakie.current_axis().xlabel = \"Event time (days)\"\nMakie.current_axis().ylabel = \"Return (%)\"\nMakie.current_axis().title = \"Event study of stock splits\"\nMakie.current_axis().titlealign = :left\nMakie.current_axis().subtitle = \"In the Indian market, with the NIFTY index applied as a market model\"\ntranslate!(Makie.current_axis().scene.plots[1], 0, 0, 1)\nMakie.current_figure()","category":"page"},{"location":"examples/replications/#Market-model-(NIFTY)","page":"Replicating eventstudies.R","title":"Market model (NIFTY)","text":"","category":"section"},{"location":"examples/replications/","page":"Replicating eventstudies.R","title":"Replicating eventstudies.R","text":"eventtime_ts, event_return_codes = eventstudy(\n    stock_returns, # same as before\n    Symbol.(split_dates_df.name) .=> split_dates_df.when, # same as before\n    -6:7, # same as before\n    MarketModel(other_returns[:, [:NiftyIndex]]) # ooh, what's this?\n    )","category":"page"},{"location":"examples/replications/","page":"Replicating eventstudies.R","title":"Replicating eventstudies.R","text":"Now for the inference:","category":"page"},{"location":"examples/replications/","page":"Replicating eventstudies.R","title":"Replicating eventstudies.R","text":"t0, lower, upper = EventStudies.inference(BootstrapInference(), eventtime_ts |> EventStudies.remap_cumsum)","category":"page"},{"location":"examples/replications/","page":"Replicating eventstudies.R","title":"Replicating eventstudies.R","text":"and the plots!","category":"page"},{"location":"examples/replications/","page":"Replicating eventstudies.R","title":"Replicating eventstudies.R","text":"scatterlines(-6:7, t0; label = \"Mean\")\nlines!(-6:7, upper; color = Makie.wong_colors(0.5)[1], linestyle = :dash, label = \"95% CI\")\nlines!(-6:7, lower; color = Makie.wong_colors(0.5)[1], linestyle = :dash)\n# spruce up the figure\naxislegend(Makie.current_axis(); position = :lt)\nMakie.current_axis().xlabel = \"Event time (days)\"\nMakie.current_axis().ylabel = \"Return (%)\"\nMakie.current_axis().title = \"Event study of stock splits\"\nMakie.current_axis().titlealign = :left\nMakie.current_axis().subtitle = \"In the Indian market, with the NIFTY index applied as a market model\"\ntranslate!(Makie.current_axis().scene.plots[1], 0, 0, 1)\nMakie.current_figure()","category":"page"},{"location":"examples/replications/","page":"Replicating eventstudies.R","title":"Replicating eventstudies.R","text":"Note how this looks subtly different than the first plot, just because of the market model!","category":"page"},{"location":"examples/replications/#Intraday-data","page":"Replicating eventstudies.R","title":"Intraday data","text":"","category":"section"},{"location":"examples/replications/","page":"Replicating eventstudies.R","title":"Replicating eventstudies.R","text":"aggregate_returns = EventStudies.load_data(\"AggregateReturns.rda\")\nrate_cuts_df = EventStudies.load_data(\"RateCuts.rda\")\nindex_returns = EventStudies.load_data(\"IndexReturns.rda\")\n\nintraday_eventtime_ts, event_return_codes = eventstudy(\n    aggregate_returns,\n    Symbol.(rate_cuts_df.name) .=> rate_cuts_df.when,\n    -34:35,\n    MarketModel(index_returns[:, [:x_1]])\n    )\n\nintraday_eventtime_ts.coredata[1, :] .= 0\n\nt0, lower, upper = EventStudies.inference(BootstrapInference(), intraday_eventtime_ts |> EventStudies.remap_cumsum)","category":"page"},{"location":"examples/replications/#Something-else","page":"Replicating eventstudies.R","title":"Something else","text":"","category":"section"},{"location":"examples/replications/","page":"Replicating eventstudies.R","title":"Replicating eventstudies.R","text":"","category":"page"},{"location":"examples/replications/","page":"Replicating eventstudies.R","title":"Replicating eventstudies.R","text":"This page was generated using Literate.jl.","category":"page"},{"location":"eventstudies/#What-is-an-event-study?","page":"What is an event study?","title":"What is an event study?","text":"","category":"section"},{"location":"artifacts/#Artifacts-for-example-data","page":"Artifacts and data","title":"Artifacts for example data","text":"","category":"section"},{"location":"artifacts/","page":"Artifacts and data","title":"Artifacts and data","text":"We use Artifacts to ship example data around, so it doesn't crowd the repository and cause download times to increase significantly.","category":"page"},{"location":"artifacts/","page":"Artifacts and data","title":"Artifacts and data","text":"In order to update the artifacts, you can upload tarballs of files to a release, then use the excellent ArtifactUtils.jl package and its ArtifactUtils.add_artifact! function to bind new artifacts to the names eventstudies_r_data and eventstudies_csv_data when in the EventStudies.jl environment.","category":"page"},{"location":"artifacts/","page":"Artifacts and data","title":"Artifacts and data","text":"Then, it's as simple as pushing the new changes to Github!","category":"page"},{"location":"artifacts/","page":"Artifacts and data","title":"Artifacts and data","text":"danger: Danger\nIt is very important that you do not overwrite any artifact; instead, always make one with a new name or in a new release.","category":"page"},{"location":"artifacts/","page":"Artifacts and data","title":"Artifacts and data","text":"These Artifacts are downloaded on release, and load_data accesses files within them.","category":"page"},{"location":"marketmodel/#Creating-a-market-model-using-TSFrames","page":"Market model implementation","title":"Creating a market model using TSFrames","text":"","category":"section"},{"location":"marketmodel/","page":"Market model implementation","title":"Market model implementation","text":"In this example, we will create a market model, and create dispatches on StatsBase functions to define how to fit and apply the model.","category":"page"},{"location":"marketmodel/","page":"Market model implementation","title":"Market model implementation","text":"First, we define the struct:","category":"page"},{"location":"marketmodel/","page":"Market model implementation","title":"Market model implementation","text":"\"\"\"\n    struct MarketModel <: AbstractModel\n    MarketModel(market_returns::TSFrame)\n\nA model which fits the firm's returns to the market returns,\nusing some provided index or market indicator.\n\nFit using `fit` or `fit!`, and apply to data using `apply`","category":"page"},{"location":"marketmodel/","page":"Market model implementation","title":"Market model implementation","text":"Fields","category":"page"},{"location":"marketmodel/","page":"Market model implementation","title":"Market model implementation","text":"$(FIELDS)\n\"\"\"\nstruct MarketModel <: AbstractModel\n    \"A TSFrame which holds the market indicator/index data.\"\n    market_returns::TSFrame\n    \"The coefficients of the fit.  Set by `fit!`.\"\n    coefs::Vector{Float64}\nend","category":"page"},{"location":"marketmodel/","page":"Market model implementation","title":"Market model implementation","text":"This has two fields, market_returns which holds the market's returns (diff(log.(price_at_close))) as a timeseries (TSFrame), and a vector of coefficients (in our case, this is alpha and beta).","category":"page"},{"location":"marketmodel/","page":"Market model implementation","title":"Market model implementation","text":"You might notice that coefs is a vector and not a 2-tuple, which seems more efficient; however, we want to be able to mutate the coefficients after construction, so we use a Vector, which is mutable.","category":"page"},{"location":"marketmodel/","page":"Market model implementation","title":"Market model implementation","text":"This defines a convenience constructor, to construct a model without fitting it. Note that the coefs field is set to NaN by default, so that if the model is used before fitting, it will return all NaNs to indicate that something is wrong.","category":"page"},{"location":"marketmodel/","page":"Market model implementation","title":"Market model implementation","text":"MarketModel(market_returns::TSFrame) = MarketModel(market_returns, Float64[NaN64, NaN64])","category":"page"},{"location":"marketmodel/","page":"Market model implementation","title":"Market model implementation","text":"We define a short method to check whether a window is located within the model's market return timeseries:","category":"page"},{"location":"marketmodel/","page":"Market model implementation","title":"Market model implementation","text":"function check_window(model::MarketModel, window, event_time)\n    # error if the index types are not the same\n    @assert typeof(event_time) == eltype(index(model.market_returns))\n    # find the index of the event time\n    event_time_index = searchsortedfirst(index(model.market_returns), event_time)\n    first_index = (first(window) + event_time_index)\n    last_index  = (last(window) + event_time_index)\n    # check if the window is within the market returns' timespan\n    window_compatible = first_index â‰¥ 1 && last_index â‰¤ length(model.market_returns)\n    # check if any of the market data in the window has missing values\n    market_data_compatible = !any(ismissing.(model.market_returns.coredata[first_index:last_index, 2]))\n    return window_compatible & market_data_compatible\nend","category":"page"},{"location":"marketmodel/","page":"Market model implementation","title":"Market model implementation","text":"Now, we move on to fitting the model.  This is simple enough, just defining an overload for StatsBase.fit!, which uses a linear model from GLM.jl.","category":"page"},{"location":"marketmodel/","page":"Market model implementation","title":"Market model implementation","text":"function StatsBase.fit!(model::MarketModel, data::TSFrame)\n    # merge the market data with the provided data\n    merged_market_ts = TSFrames.join(model.market_returns, data; jointype = :JoinRight)\n    # apply the model to the data\n    linear_model = GLM.lm(\n        GLM.Term(Symbol(first(names(data)))) ~ GLM.Term(Symbol(first(names(model.market_returns)))),\n        merged_market_ts.coredata[!, 2:end]\n    )\n    ct = GLM.coeftable(linear_model)\n    Î±, Î² = ct.cols[1]\n    model.coefs[1] = Î±\n    model.coefs[2] = Î²\n    return model\nend","category":"page"},{"location":"marketmodel/","page":"Market model implementation","title":"Market model implementation","text":"By using the verbose GLM.Term(Symbol(...)) syntax, we were able to replicate the behaviour of the @formula macro from GLM programmatically. This lets us hook in to the nice GLM machinery for fitting tables, as opposed to fitting matrices which is less nice.","category":"page"},{"location":"marketmodel/","page":"Market model implementation","title":"Market model implementation","text":"Now, we define a convenience function to fit the model, which returns a new model, rather than mutating the old one.","category":"page"},{"location":"marketmodel/","page":"Market model implementation","title":"Market model implementation","text":"function StatsBase.fit(model::MarketModel, data::TSFrame)\n    new_model = MarketModel(model.market_returns)\n    fit!(new_model, data)\n    return new_model\nend","category":"page"},{"location":"marketmodel/","page":"Market model implementation","title":"Market model implementation","text":"Finally, we define a function to apply the model to data.  This is a bit more complicated, as we need to do some data manipulation to get the data into the right shape. Basically, we merge teh market data with the intercecpt data (so that their time indices are aligned to the input), and then subtract the intercept (alpha), and the slope (beta) times the market data from the data.","category":"page"},{"location":"marketmodel/","page":"Market model implementation","title":"Market model implementation","text":"function StatsBase.predict(model::MarketModel, data::TSFrame)\n    ret = deepcopy(data)\n    market_data = TSFrame(TSFrames.DataFrames.leftjoin(data.coredata, model.market_returns.coredata; on = :Index))\n    for col in names(data)\n        ret.coredata[!, col] = data.coredata[!, col] .- model.coefs[1] .- model.coefs[2] .* market_data.coredata[!, first(names(model.market_returns))]\n    end\n    return ret\nend","category":"page"},{"location":"marketmodel/","page":"Market model implementation","title":"Market model implementation","text":"Below is some code to make use of this market model:","category":"page"},{"location":"marketmodel/","page":"Market model implementation","title":"Market model implementation","text":"model = MarketModel(nifty_returns)\nGLM.StatsBase.fit!(model, data)\nret = apply(model, TSFrame(data.coredata[5000:end, :]))\n\nf, a, p = lines(Dates.value.(index(data)[5000:end] .- Date(2015, 1, 1)), (TSFrame(data.coredata[5000:end, [:var\"RELIANCE.NS\"]]) |> EventStudies.remap_cumsum).var\"RELIANCE.NS\"; label = \"RELIANCE.NS\")\ndmret = TSFrame(dropmissing(ret.coredata))\np2 = lines!(a, Dates.value.(index(dmret) .- Date(2015, 1, 1)), (dmret |> EventStudies.remap_cumsum).var\"RELIANCE.NS\"; label = \"Reliance after market model\")\nnmnr = TSFrame(dropmissing(nifty_returns.coredata))\np2 = lines!(a, Dates.value.(index(nmnr) .- Date(2015, 1, 1)), (nmnr |> EventStudies.remap_cumsum).var\"NIFTY\"; label = \"NIFTY index\")\nMakie.current_figure()\nxlims!(a, 0, nothing)\nf\naxislegend(a, position = :rb)\na.title = \"Market model on NIFTY index\"\nf","category":"page"},{"location":"marketmodel/","page":"Market model implementation","title":"Market model implementation","text":"","category":"page"},{"location":"marketmodel/","page":"Market model implementation","title":"Market model implementation","text":"This page was generated using Literate.jl.","category":"page"},{"location":"models/#Models","page":"Models","title":"Models","text":"","category":"section"},{"location":"models/#Types-of-models","page":"Models","title":"Types of models","text":"","category":"section"},{"location":"models/","page":"Models","title":"Models","text":"Modules = [EventStudies.Models]\nFilter = x -> typeof(x) === DataType","category":"page"},{"location":"models/#EventStudies.Models.AbstractModel","page":"Models","title":"EventStudies.Models.AbstractModel","text":"abstract type Models.AbstractModel\n\nAbstract type for models used in EventStudies.jl. Any model should implement: StatsBase.fit!(model, data::TSFrame) and Models.apply(model, data::TSFrame).\n\n\n\n\n\n","category":"type"},{"location":"models/#EventStudies.Models.ConstantMeanReturn","page":"Models","title":"EventStudies.Models.ConstantMeanReturn","text":"ConstantMeanReturn()\n\nEach column is decreased by its mean.\n\n\n\n\n\n","category":"type"},{"location":"models/#EventStudies.Models.ExcessReturn","page":"Models","title":"EventStudies.Models.ExcessReturn","text":"ExcessReturn(market_returns::TSFrame)\n\nThis models basic scalar excess return.  \n\n\n\n\n\n","category":"type"},{"location":"models/#EventStudies.Models.MarketModel","page":"Models","title":"EventStudies.Models.MarketModel","text":"struct MarketModel <: AbstractModel\nMarketModel(market_returns::TSFrame)\n\nA model which fits the firm's returns to the market returns, using some provided index or market indicator.\n\nFit using fit or fit!, and apply to data using apply\n\nFields\n\nmarket_returns: A TSFrame which holds the market indicator/index data.\ncoefs: The coefficients of the fit.  Set by fit!.\n\n\n\n\n\n","category":"type"},{"location":"models/#Model-API","page":"Models","title":"Model API","text":"","category":"section"},{"location":"models/","page":"Models","title":"Models","text":"To define a new model, you need to create a struct MyModel <: EventStudies.Models.AbstractModel, whose contents can be arbitrary.  ","category":"page"},{"location":"models/","page":"Models","title":"Models","text":"Then, you have to implement StatsBase.fit!(model::MyModel, data::TSFrame)::MyModel, which should mutate the model to store the coefficients (you can do this in an immutable struct by making one of the fields a mutable type like a Vector).","category":"page"},{"location":"models/","page":"Models","title":"Models","text":"Finally, you have to implement StatsBase.predict(model::MyModel, data::TSFrame)::TSFrame which runs the model and returns the result as a TSFrame.  Column names should not be changed and data should not be mutated.","category":"page"},{"location":"models/","page":"Models","title":"Models","text":"Optionally, you can also implement Models.check_window(model::MyModel, window)::Bool, which checks whether the given window exists in your model.","category":"page"},{"location":"models/","page":"Models","title":"Models","text":"EventStudies.StatsBase.fit!\nEventStudies.StatsBase.predict","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"EditURL = \"https://github.com/xKDR/EventStudies.jl/blob/main/examples/mwe.jl\"","category":"page"},{"location":"examples/mwe/#A-minimal-example-of-using-EventStudies.jl","page":"Minimal example","title":"A minimal example of using EventStudies.jl","text":"","category":"section"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"This is a basic example of how you can conduct an event study using EventStudies.jl. We create and use synthetic data, show how to use the EventStudies.jl API, and plot it!","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"First, we load the packages:","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"using TSFrames      # EventStudies operates exclusively on TSFrames\nusing EventStudies\nusing CairoMakie    # For plotting","category":"page"},{"location":"examples/mwe/#Creating-a-dataset","page":"Minimal example","title":"Creating a dataset","text":"","category":"section"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"First, we define the TSFrame with the data we want to use. This is a TSFrame with 11 rows, and 2 columns, var1 and var2. They both follow the same general path, linearly increasing to 1, then staying at 1.","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"ts1 = TSFrame(\n    DataFrame(\n        :Index => 1:11,\n        :var1 => vcat(LinRange(0, 1, 5), ones(6)),\n        :var2 => vcat(LinRange(0, 1, 6), ones(5)),\n    )\n)","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"For convenience, I've directly referred to everything from EventStudies.jl as EventStudies.*. However, these are all exported, so you don't have to do that.","category":"page"},{"location":"examples/mwe/#Computing-the-event-study","page":"Minimal example","title":"Computing the event study","text":"","category":"section"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"Event studies are conceptually very simple - you take a time series and a list of events, and extract a window around each event.  Then, you perform inference on these measurements to see if the event had a statistically significant effect on the time series, and what that effect was.","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"In order to conduct an event study, we need a list of events.  This has to be passed as a Vector of Pair{Symbol, DateType}. The first element of the pair is the name of the column in ts1 that we want to use as the event. The second element is the time of the event.  This can be in any type DateType which TSFrames supports, which for now is restricted to Int, Dates.Date, and Dates.DateTime.","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"event_list = [:var1 => 5, :var2 => 6, :var2 => 15]","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"Our dataset is the form of absolute measurements, levels in EventStudies.jl parlance. However, event studies function best when given data in the form of returns, which are the difference between the log-transformed measurements, or diff(log(ts)).  So, we'll convert our data to returns using the EventStudies.levels_to_returns function.","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"To do this, we'll use the EventStudies.eventstudy function, which takes in a TSFrame of returns, a list of events, and a window size.","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"eventtime_returns_ts, event_return_codes = EventStudies.eventstudy(\n    levels_to_returns(ts1), # the dataset, converted from \"levels\"\n    event_list,             # the list of events, as :colname => event_time\n    2                       # the width of the window, i.e., `-2:2`.\n)","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"The eventtime_returns_ts is a TSFrame with the same columns as ts1, but with a new index.  This index takes the form of \"event time\", which is the time relative to the event.","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"All columns share the same index.  statuses represents the status of each event as a EventStatus object. In this case, the first two events were successful (EventStudies.Success) but the last one was unsuccessful.","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"This is because the last event was too close to the end of the dataset to have a full window, so it was discarded, as indicated by the EventStudies.WrongSpan error code.","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"Note that in this case, we have 3 events, but only 2 columns.  This is because the third event is too close to the end of the dataset to have a full window, so it's discarded.","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"Now, we can compute the cumulative returns, and the confidence intervals using the EventStudies.remap_cumsum and EventStudies.inference functions. The remap_cumsum function takes in a TSFrame of returns, and returns a TSFrame of cumulative returns.  You can think of cumulative returns as a mapping from returns back to levels, except renormalized so that everything starts at 0.","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"eventtime_cum_ts = EventStudies.remap_cumsum(eventtime_returns_ts)","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"Finally, we conduct inference on the cumulative returns. We'll use the EventStudies.BootstrapInference method, which takes in an inference method (see EventStudies.InferenceMethod) and the return timeseries. In this case, we use the bootstrap method of inference, which calls to Bootstrap.jl.","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"confints = EventStudies.inference(EventStudies.BootstrapInference(), eventtime_cum_ts)","category":"page"},{"location":"examples/mwe/#Plotting","page":"Minimal example","title":"Plotting","text":"","category":"section"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"Now, we can plot the results.  We'll use Makie.jl for this.","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"f, a, p = series(eventtime_cum_ts.Index, Matrix(eventtime_cum_ts)'; labels = [\"Event 1\", \"Event 2\"], axis = (xlabel = \"Event time\", ylabel = \"Cumulative return (%)\"))\nband!(eventtime_cum_ts.Index, confints[2], confints[3]; color = Makie.wong_colors(0.5)[3], label = \"95% Confidence interval\")\nlines!(eventtime_cum_ts.Index, confints[1]; label = \"Mean\")\naxislegend(a; position = :rb)\nf","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"And that's our event study!","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"","category":"page"},{"location":"examples/mwe/","page":"Minimal example","title":"Minimal example","text":"This page was generated using Literate.jl.","category":"page"},{"location":"#EventStudies","page":"Home","title":"EventStudies","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: Dev) (Image: Build Status) (Image: Build Status) (Image: codecov)","category":"page"},{"location":"","page":"Home","title":"Home","text":"This package is made to conduct event studies in Julia.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The package is currently unregistered, so you can install directly by URL.  This will change in the future!","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Pkg\nPkg.add(url = \"https://github.com/xKDR/EventStudies.jl\")","category":"page"},{"location":"#Usage","page":"Home","title":"Usage","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The main entry point is the eventstudy function, which takes in a TSFrame (from TSFrames.jl) and a vector of event times, and returns a TSFrame of the timeseries in \"event time\".","category":"page"},{"location":"","page":"Home","title":"Home","text":"Here's a quick example of running ","category":"page"},{"location":"","page":"Home","title":"Home","text":"EventStudies.assetpath(...)\nspr = zoo_to_tsframe(EventStudies.asset(\"StockPriceReturns\"))\neventtime_returns_tsframe, event_success_codes = eventstudy(levels_to_returns(market_data), colnames .=> event_times, #= window width =# 4)","category":"page"},{"location":"#Models","page":"Home","title":"Models","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"You can provide a model in the last parameter of eventstudy, which is automatically parallelized based on how many threads you started Julia with.","category":"page"},{"location":"event_time/#Event-time","page":"Event time","title":"Event time","text":"","category":"section"},{"location":"event_time/","page":"Event time","title":"Event time","text":"Event time is the fundamental concept of the event study.  When an event study is performed, windows around each event are extracted, and re-indexed to an \"event time\" where the event occurs at t=0.","category":"page"},{"location":"event_time/","page":"Event time","title":"Event time","text":"EventStudies.jl offers a simple interface to perform direct conversion of a timeseries and a set of events to event time, with the physical_to_event_time function:","category":"page"},{"location":"event_time/","page":"Event time","title":"Event time","text":"EventStudies.physical_to_event_time","category":"page"},{"location":"event_time/#Event-codes","page":"Event time","title":"Event codes","text":"","category":"section"},{"location":"event_time/","page":"Event time","title":"Event time","text":"Each event has an associated event time.  If the time is not viable to study (outside the index of the input data),  or there is some issue with either the data or the model, then the event will be ignored.","category":"page"},{"location":"event_time/","page":"Event time","title":"Event time","text":"Ignored events have an event code which describes why they were ignored; successful events have the code EventStudies.Success.","category":"page"},{"location":"event_time/","page":"Event time","title":"Event time","text":"Modules = [EventStudies]\nFilter = x -> typeof(x) === DataType && x <: EventStudies.EventStatus","category":"page"},{"location":"event_time/#EventStudies.DataMissing","page":"Event time","title":"EventStudies.DataMissing","text":"This means that there was missing data within the window.\n\n\n\n\n\n","category":"type"},{"location":"event_time/#EventStudies.EventStatus","page":"Event time","title":"EventStudies.EventStatus","text":"abstract type EventStatus\n\nAn abstract supertype for all event status types.  These are used to indicate the status of an event  (i.e., if it was successful or not, and if so why it was unsuccessful).\n\n\n\n\n\n","category":"type"},{"location":"event_time/#EventStudies.InvalidColname","page":"Event time","title":"EventStudies.InvalidColname","text":"This means that the column name was not found in the data.  It prints the column name.  Equivalent to unitmissing in eventstudies.R.\n\n\n\n\n\n","category":"type"},{"location":"event_time/#EventStudies.MissingAfterModel","page":"Event time","title":"EventStudies.MissingAfterModel","text":"This means that the data had a missing value after the model's prediction.\n\n\n\n\n\n","category":"type"},{"location":"event_time/#EventStudies.ModelDataMissing","page":"Event time","title":"EventStudies.ModelDataMissing","text":"This means that the model was missing data within the event time window.\n\n\n\n\n\n","category":"type"},{"location":"event_time/#EventStudies.ModelIndexIncompatible","page":"Event time","title":"EventStudies.ModelIndexIncompatible","text":"This means that the model's index type was incompatible with the event's index type.\n\n\n\n\n\n","category":"type"},{"location":"event_time/#EventStudies.Success","page":"Event time","title":"EventStudies.Success","text":"Represents a successful event\n\n\n\n\n\n","category":"type"},{"location":"event_time/#EventStudies.WrongSpan","page":"Event time","title":"EventStudies.WrongSpan","text":"This means that the span of the window extended outside the available data.\n\n\n\n\n\n","category":"type"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"EditURL = \"https://github.com/xKDR/EventStudies.jl/blob/main/examples/nifty.jl\"","category":"page"},{"location":"examples/nifty/#The-effect-of-Fed-rate-hikes-on-Indian-indicators","page":"Rate hikes and market indicators","title":"The effect of Fed rate hikes on Indian indicators","text":"","category":"section"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"# Load the packages:\nusing TSFrames\nusing MarketData\nusing Dates\nusing DataFrames\nusing EventStudies\nusing CairoMakie","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"First, get data about stock prices from MarketData.jl:","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"NIFTY index (India)","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"nifty = TSFrame(MarketData.yahoo(\"^NSEI\"))\nselect!(nifty.coredata, :Index, :AdjClose => :NIFTY);\nnifty # hide","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"USD/INR exchange rate","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"usd_inr = TSFrame(MarketData.yahoo(\"USDINR=X\"))\nselect!(usd_inr.coredata, :Index, :AdjClose => :USDINR);\nusd_inr # hide","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"US Fed funds rate","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"fed_rate = TSFrame(MarketData.fred(\"FEDFUNDS\"))\nfed_rate_2007 = TSFrame(fed_rate.coredata[searchsortedfirst(index(fed_rate), Date(2007, 1, 1)):end, :])\nfed_rate_diffs = diff(fed_rate_2007)\ndropmissing!(fed_rate_diffs.coredata)\nfed_rate_dates = filter(:VALUE => >(0), fed_rate_diffs.coredata)\n\n############################################################","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"                     Nifty                           #","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"############################################################\n\nphystime_returns_ts, event_status = EventStudies.eventstudy(levels_to_returns(nifty), (:NIFTY,) .=> fed_rate_dates.Index, -6:7, #=MarketModel(levels_to_returns(fed_rate))=#)\nt0, lower, upper = inference(BootstrapInference(), phystime_returns_ts)\nN = 200\ntimes = (phystime_returns_ts.Index .|> Dates.value) .+ 365\ny_vals, y_colors = EventStudies.inference_surface(BootstrapInference(), phystime_returns_ts; density = N)","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"plot","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"f, a, p = lines(times, t0; label = \"Mean over all events\")\nsp = surface!(a, permutedims(reduce(hcat, fill(times, N))), y_vals, y_colors; shading = false, colormap = :diverging_bwr_55_98_c37_n256)\ntranslate!(p, 0,0,-99)\ntranslate!(sp, 0,0,-100)\n\np.color = Makie.wong_colors()[3]\n\ncb = Colorbar(f[1, 2], sp; label = \"Confidence level\")\ncb.ticks = WilkinsonTicks(8; k_min = 5, k_max = 10)\nleg = axislegend(a; position = :rt)\n\na.title = \"Nifty performance after a Fed rate hike\"\na.subtitle = rich(rich(\"t=0\", font = to_font(\"Fira Mono\")), \" indicates the time of rate hike\")\na.titlealign = :left\na.xlabel = \"Event time (days)\"\na.ylabel = \"NIFTY returns\"\na.xticks = WilkinsonTicks(8; k_min = 5, k_max = 10)\n\nf","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"save(\"nifty.pdf\", f; ptperunit = 1)","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"############################################################","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"                     USDINR                          #","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"############################################################\n\n\nphystime_returns_ts, event_status = EventStudies.eventstudy(levels_to_returns(usd_inr), (:USDINR,) .=> fed_rate_dates.Index, -6:7)\nt0, lower, upper = inference(BootstrapInference(), phystime_returns_ts)\n\nphystime_returns_ts = remap_cumsum(phystime_returns_ts)\n\nN = 100\nxs = (phystime_returns_ts.Index .|> Dates.value) .+ 365\ndeviations = LinRange(0.5, 0.975, NÃ·2)\n\nx_vals = permutedims(hcat(fill(xs, N)...))\ny_vals = zeros(N, length(xs))\ny_colors = zeros(N, length(xs))\n\nfor (y_ind, deviation) in enumerate(deviations)\n    t0, lower, upper = inference(BootstrapInference(), phystime_returns_ts, deviation)\n    y_vals[50 - y_ind + 1, :] .= lower\n    y_vals[50 + y_ind , :] .= upper\n    y_colors[50 - y_ind + 1, :] .= 1 - deviation\n    y_colors[50 + y_ind , :] .= deviation\n\nend","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"plot","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"f, a, p = lines((phystime_returns_ts.Index .|> Dates.value) .+ 365, t0; label = \"Mean over all events\")\nsp = surface!(a, x_vals, y_vals, y_colors; shading = false, colormap = :diverging_bwr_55_98_c37_n256)\ntranslate!(p, 0,0,1)\nf\np.color = Makie.wong_colors()[3]\nf\n\ncb = Colorbar(f[1, 2], sp; label = \"Confidence level\")\ncb.ticks = WilkinsonTicks(8; k_min = 5, k_max = 10)\nleg = axislegend(a; position = :rt)\n\na.title = \"USD-INR performance after a Fed rate hike\"\na.subtitle = rich(rich(\"t=0\", font = to_font(\"Fira Mono\")), \" indicates the time of rate hike\")\na.titlealign = :left\na.xlabel = \"Event time (days)\"\na.ylabel = \"USD-INR returns\"\na.xticks = WilkinsonTicks(8; k_min = 5, k_max = 10)\nf","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"save(\"usdinr2.pdf\", f; ptper_unit = 1)","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"","category":"page"},{"location":"examples/nifty/","page":"Rate hikes and market indicators","title":"Rate hikes and market indicators","text":"This page was generated using Literate.jl.","category":"page"}]
}
